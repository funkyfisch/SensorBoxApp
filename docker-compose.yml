version: '3.2'

services:

  arduino:
    build:
      context: .
      dockerfile: docker/arduino/Dockerfile
    image: sensorbox-arduino
    container_name: sensorbox-arduino
    volumes:
      - type: bind
        source: ./arduino/
        target: /usr/sketch/
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
    command: "arduino"
    devices:
      - dev/tty
      - dev/bus/usb
    tty: true
    network_mode: "host"
    privileged: true
    environment:
      - DISPLAY=unix:0


  nodejs:
    build:
      context: .
      dockerfile: docker/nodejs/Dockerfile
    image: sensorbox-nodejs
    container_name: sensorbox-nodejs
    volumes:
      - type: bind
        source: ./nodejs/
        target: /usr/share/app
    ports:
      - "8585:8585"
    command: "sh ./bin/startup.sh"
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    restart: always

  vuejs:
    build:
      context: .
      dockerfile: docker/vuejs/Dockerfile
    image: sensorbox-vuejs
    container_name: sensorbox-vuejs
    volumes:
      - type: bind
        source: ./vuejs/
        target: /usr/share/app
    ports:
      - "9595:9595"
    command: "sh ./bin/startup.sh"
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    restart: always

  vuejs-build:
    build:
      context: .
      dockerfile: docker/vuejs/Dockerfile
    image: sensorbox-vuejs
    container_name: sensorbox-vuejs
    volumes:
      - type: bind
        source: ./vuejs/
        target: /usr/share/app
    command: "npm run build"

  server:
    image: sensorbox-nodejs
    volumes:
      - type: bind
        source: ./vuejs/dist/
        target: /usr/share/app/dist
      - type: bind
        source: ./server/
        target: /usr/share/app
    ports:
      - "8989:8989"
    working_dir: /usr/share/app
    command: "bash ./server.sh"
    restart: always

volumes:
  mongodbvolume:
    driver: local
